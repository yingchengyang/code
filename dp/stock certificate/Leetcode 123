int maxProfit(vector<int>& prices) {
    int length = prices.size();
    if(length <= 1) return 0;
    vector<vector<int>> dp(length);
    for(int i = 0; i < length; i++) dp[i].resize(4);

    dp[0][0] = -prices[0];
    dp[0][1] = 0;
    dp[0][2] = -prices[0];
    dp[0][3] = 0;
    for(int i = 1; i < length; i++){
        dp[i][0] = max(dp[i-1][0], -prices[i]);
        dp[i][1] = max(dp[i-1][1], dp[i-1][0] + prices[i]);
        dp[i][2] = max(dp[i-1][2], dp[i-1][1] - prices[i]);
        dp[i][3] = max(dp[i-1][3], dp[i-1][2] + prices[i]);
    }
    return max(dp[length-1][1], dp[length-1][3]);
}
