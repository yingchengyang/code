int maxProfit(vector<int>& prices) {
    int length = prices.size();
    if(length <= 1) return 0;
    vector<vector<int>> dp(length);
    for(int i = 0; i < length; i++) dp[i].resize(3);
    /*  dp[i][0] represent in day i, we have a stock certificate
        dp[i][1] represent in day i, we sell a stock certificate
        dp[i][2] represent in day i, we can buy a stock certificate   */
    dp[0][0] = -prices[0];
    dp[0][1] = 0;
    dp[0][2] = 0;
    for(int i = 1; i < length; i++){
        dp[i][0] = max(dp[i-1][0], dp[i-1][2] - prices[i]);
        dp[i][1] = dp[i-1][0] + prices[i];
        dp[i][2] = max(dp[i-1][1], dp[i-1][2]);
    }
    return max(dp[length-1][1], dp[length-1][2]);
}
